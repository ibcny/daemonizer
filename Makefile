#############################################################################
# Makefile for building: daemon
# Generated by qmake (1.07a) (Qt 3.3.5) on: Tue Mar 12 16:57:50 2013
# Project:  daemon.pro
# Template: app
# Command: $(QMAKE) -o Makefile daemon.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -g -fno-strict-aliasing -fobjc-exceptions -Wall -W -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -g -fno-strict-aliasing  
CXXFLAGS = -pipe -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -g -fno-strict-aliasing -fobjc-exceptions -Wall -W -O2 -march=i586 -mtune=i686 -fmessage-length=0 -Wall -D_FORTIFY_SOURCE=2 -g -fno-strict-aliasing 
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I. -I/usr/include 
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/lib/  -L/usr/X11R6/lib/  -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = 
UIC      = 
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = daemon.h \
		lock.h
SOURCES = daemon.c \
		lock.c \
		main.c
OBJECTS = daemon.o \
		lock.o \
		main.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = daemon.pro
DESTDIR  = 
TARGET   = daemon

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

dist: 
	@mkdir -p .tmp/daemon && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/daemon/ && ( cd `dirname .tmp/daemon` && $(TAR) daemon.tar daemon && $(GZIP) daemon.tar ) && $(MOVE) `dirname .tmp/daemon`/daemon.tar.gz . && $(DEL_FILE) -r .tmp/daemon

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

daemon.o: daemon.c daemon.h \
		lock.h

lock.o: lock.c lock.h

main.o: main.c lock.h \
		daemon.h

####### Install

install:  

uninstall:  

